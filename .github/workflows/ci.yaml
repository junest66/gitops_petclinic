# 워크플로우의 이름을 정의합니다.
name: Build, Push, and Update Deployment

# 워크플로우를 트리거하는 이벤트를 정의합니다.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # 수동 실행 지원

# 환경 변수 정의
env:
  ECR_REGISTRY: "514090833954.dkr.ecr.eu-south-2.amazonaws.com"
  ECR_REPOSITORY: "joon-k8s-cluster-repo"
  AWS_REGION: "eu-south-2"

# build 작업 정의
jobs:
  build:
    runs-on: ubuntu-latest  # 최신 Ubuntu 환경에서 실행

    steps:
      # 현재 GitHub 레포지토리 코드를 체크아웃합니다.
      - name: Checkout repository
        uses: actions/checkout@v4

      # JDK 17을 설치합니다.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'  # 자동 Maven 캐싱

      # mvnw(Maven Wrapper)에 실행 권한을 부여합니다.
      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      # Maven 빌드 수행 (테스트는 생략)
      - name: Build with Maven Wrapper
        run: ./mvnw package -DskipTests

      # Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # AWS 인증 정보 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Amazon ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Docker 이미지 빌드 및 Amazon ECR에 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Kubernetes 배포 YAML 파일의 이미지 태그를 새로 빌드된 이미지로 업데이트
      - name: Update Deployment YAML
        run: |
          sed -i 's|image: .*|image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}|' k8s/deployment.yaml

      # 변경사항이 있는 경우 커밋하고 GitHub에 푸시
      - name: Commit and push if there are changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add k8s/deployment.yaml
          git diff --quiet && git diff --staged --quiet || \
          (git commit -m "Update image tag to ${{ github.sha }}"; \
           git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }})
      
      # 배포 결과 알림
      - name: Notify deployment status
        if: always()
        run: |
          echo "::notice::Deployment status: ${{ job.status }}"
          echo "::notice::Image tag: ${{ github.sha }}"
          echo "::notice::ECR Repository: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}"
