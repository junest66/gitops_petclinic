# 워크플로우의 이름을 정의합니다.
name: Build, Push, and Update Deployment

# 워크플로우를 트리거하는 이벤트를 정의합니다.
# main 브랜치에 대한 push 또는 pull request 발생 시 실행됩니다.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# build 작업 정의
jobs:
  build:
    runs-on: ubuntu-latest  # 최신 Ubuntu 환경에서 실행

    steps:
      # 현재 GitHub 레포지토리 코드를 체크아웃합니다.
      - name: Checkout repository
        uses: actions/checkout@v3

      # JDK 17을 설치합니다.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # mvnw(Maven Wrapper)에 실행 권한을 부여합니다.
      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      # Maven 의존성 캐싱 (빌드 시간 단축 목적)
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Maven 빌드 수행 (테스트는 생략)
      - name: Build with Maven Wrapper
        run: ./mvnw package -DskipTests

      # AWS 인증 정보 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-south-2

      # Amazon ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Docker 이미지 빌드 및 Amazon ECR에 푸시
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: "514090833954.dkr.ecr.eu-south-2.amazonaws.com"
          ECR_REPOSITORY: "joon-k8s-cluster-repo"
          IMAGE_TAG: "${{ github.sha }}"  # 커밋 SHA를 이미지 태그로 사용
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Kubernetes 배포 YAML 파일의 이미지 태그를 새로 빌드된 이미지로 업데이트
      - name: Update Deployment YAML
        run: |
          sed -i 's|image: .*|image: 514090833954.dkr.ecr.eu-south-2.amazonaws.com/joon-k8s-cluster-repo:${{ github.sha }}|' k8s/deployment.yaml

      # 변경사항이 있는 경우 커밋하고 GitHub에 푸시
      - name: Commit and push if there are changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add k8s/deployment.yaml
          git diff --quiet && git diff --staged --quiet || \
          (git commit -m "Update image tag to ${{ github.sha }}"; \
           git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }})
